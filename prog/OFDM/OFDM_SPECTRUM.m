% Параметры сигнала
N = 32;                  % Количество поднесущих
Tsym = 0.001;            % Длительность OFDM-символа (сек)
df = 1 / Tsym;          % Расстояние между поднесущими (Гц)
F = df * N;             % Полоса сигнала (Гц)

Fs = 2 * F;             % Частота дискретизации (должна быть больше полосы сигнала)
T = 1 / Fs;             % Период дискретизации
L = round(Tsym / T);    % Длина сигнала (количество отсчетов)
t = (0:L-1) * T;        % Временная ось

% Генерация случайных данных для модуляции
%data = randi([0 1], 1, N);
data = ones(1, N);

% Модуляция данных на поднесущие
ofdm_signal = zeros(1, L);
for k = 1:N
    ofdm_signal = ofdm_signal + data(k) * exp(1j * 2 * pi * k * df * t);
end

% Вычисление спектра
Y = fft(ofdm_signal);
P2 = abs(Y / L);
P1 = P2(1:L/2+1);
P1(2:end-1) = 2 * P1(2:end-1);
f = Fs * (0:(L/2)) / L;

% Построение графика сигнала во временной области
figure;
subplot(2, 1, 1);
plot(t, real(ofdm_signal)); % Отображаем только реальную часть сигнала
title('OFDM-сигнал во временной области');
xlabel('Время (с)');
ylabel('Амплитуда');
grid on;

% Построение спектра
subplot(2, 1, 2);
plot(f, P1);
title('Спектр OFDM-сигнала');
xlabel('Частота (Гц)');
ylabel('Амплитуда');
grid on;

% Вывод параметров
disp(['Расстояние между поднесущими (df): ', num2str(df), ' Гц']);
disp(['Полоса сигнала (F): ', num2str(F), ' Гц']);
disp(['Частота дискретизации (Fs): ', num2str(Fs), ' Гц']);
